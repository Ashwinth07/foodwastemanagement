[{"E:\\food waste\\foodwastemanagement\\Client\\src\\index.js":"1","E:\\food waste\\foodwastemanagement\\Client\\src\\reportWebVitals.js":"2","E:\\food waste\\foodwastemanagement\\Client\\src\\App.js":"3","E:\\food waste\\foodwastemanagement\\Client\\src\\components\\NavBar.js":"4","E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\Loginregister.js":"5","E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\Ourmission.js":"6","E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\Registernew.js":"7","E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\About.js":"8","E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\Home.js":"9","E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\Contact.js":"10","E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\Login.js":"11","E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\Adminpage.js":"12","E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\AdminDashboard.js":"13","E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\Donarpage.js":"14","E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\Listfooddetails.js":"15","E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\Menu.js":"16","E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\DonarDashboard.js":"17","E:\\food waste\\foodwastemanagement\\Client\\src\\components\\DonarSidebar.js":"18","E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\Admin\\Regdonors.js":"19","E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\Admin\\State.js":"20","E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\Admin\\Requests.js":"21","E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\Admin\\City.js":"22","E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\Admin\\Listedfoods.js":"23","E:\\food waste\\foodwastemanagement\\Client\\src\\components\\Admin\\Adminsidebar.js":"24","E:\\food waste\\foodwastemanagement\\Client\\src\\components\\MenuItem.js":"25","E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\Requests.js":"26","E:\\food waste\\foodwastemanagement\\Client\\src\\components\\TodoList.js":"27","E:\\food waste\\foodwastemanagement\\Client\\src\\components\\SubMenu.js":"28","E:\\food waste\\foodwastemanagement\\Client\\src\\components\\SidebarData.js":"29","E:\\food waste\\foodwastemanagement\\Client\\src\\components\\Admin\\SidebarData.js":"30","E:\\food waste\\foodwastemanagement\\Client\\src\\components\\Admin\\SubMenu.js":"31","E:\\food waste\\foodwastemanagement\\Client\\src\\helpers\\MenuList.js":"32","E:\\food waste\\foodwastemanagement\\Client\\src\\Menu\\Menu.js":"33","E:\\food waste\\foodwastemanagement\\Client\\src\\components\\TodoForm.js":"34","E:\\food waste\\foodwastemanagement\\Client\\src\\components\\Todo.js":"35"},{"size":562,"mtime":1671712378663,"results":"36","hashOfConfig":"37"},{"size":375,"mtime":1665581289997,"results":"38","hashOfConfig":"37"},{"size":7509,"mtime":1671947384160,"results":"39","hashOfConfig":"37"},{"size":2362,"mtime":1665664980270,"results":"40","hashOfConfig":"37"},{"size":565,"mtime":1671712378587,"results":"41","hashOfConfig":"37"},{"size":814,"mtime":1671949029134,"results":"42","hashOfConfig":"37"},{"size":8178,"mtime":1671712378590,"results":"43","hashOfConfig":"37"},{"size":765,"mtime":1671716767962,"results":"44","hashOfConfig":"37"},{"size":125,"mtime":1666067240789,"results":"45","hashOfConfig":"37"},{"size":1239,"mtime":1671712378584,"results":"46","hashOfConfig":"37"},{"size":3317,"mtime":1671712378586,"results":"47","hashOfConfig":"37"},{"size":1604,"mtime":1671712378583,"results":"48","hashOfConfig":"37"},{"size":1739,"mtime":1671712378582,"results":"49","hashOfConfig":"37"},{"size":1611,"mtime":1671712378585,"results":"50","hashOfConfig":"37"},{"size":354,"mtime":1671712378585,"results":"51","hashOfConfig":"37"},{"size":629,"mtime":1671949030361,"results":"52","hashOfConfig":"37"},{"size":4483,"mtime":1671712378584,"results":"53","hashOfConfig":"37"},{"size":1767,"mtime":1671712378660,"results":"54","hashOfConfig":"37"},{"size":153,"mtime":1666283900342,"results":"55","hashOfConfig":"37"},{"size":664,"mtime":1671712378582,"results":"56","hashOfConfig":"37"},{"size":674,"mtime":1666283900343,"results":"57","hashOfConfig":"37"},{"size":281,"mtime":1666283900341,"results":"58","hashOfConfig":"37"},{"size":1109,"mtime":1671712378582,"results":"59","hashOfConfig":"37"},{"size":1956,"mtime":1671712378659,"results":"60","hashOfConfig":"37"},{"size":265,"mtime":1671712378660,"results":"61","hashOfConfig":"37"},{"size":674,"mtime":1666067240793,"results":"62","hashOfConfig":"37"},{"size":8785,"mtime":1671712378662,"results":"63","hashOfConfig":"37"},{"size":1667,"mtime":1665816112143,"results":"64","hashOfConfig":"37"},{"size":1687,"mtime":1671712378661,"results":"65","hashOfConfig":"37"},{"size":2493,"mtime":1671712378659,"results":"66","hashOfConfig":"37"},{"size":1724,"mtime":1666283900349,"results":"67","hashOfConfig":"37"},{"size":641,"mtime":1671712378663,"results":"68","hashOfConfig":"37"},{"size":3636,"mtime":1671712378581,"results":"69","hashOfConfig":"37"},{"size":5892,"mtime":1671712378661,"results":"70","hashOfConfig":"37"},{"size":1269,"mtime":1671712378661,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"139da9l",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"74"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"E:\\food waste\\foodwastemanagement\\Client\\src\\index.js",[],["152","153"],"E:\\food waste\\foodwastemanagement\\Client\\src\\reportWebVitals.js",[],"E:\\food waste\\foodwastemanagement\\Client\\src\\App.js",["154","155","156","157"],"E:\\food waste\\foodwastemanagement\\Client\\src\\components\\NavBar.js",[],"E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\Loginregister.js",[],"E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\Ourmission.js",[],"E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\Registernew.js",["158","159","160","161"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nconst Registernew = () => {\r\n  const [userData, setUserData] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    passwordConfirm: \"\",\r\n    age: \"\",\r\n    birthdate: \"\",\r\n    phonenumber: \"\",\r\n    gender: \"\",\r\n    address: \"\",\r\n    typelogin: \"\",\r\n  });\r\n\r\n  const Navigate = useNavigate();\r\n  const changeHandler = (e) => {\r\n    const { name, value, type } = e.target;\r\n    setUserData({ ...userData, [name]: value });\r\n  };\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (userData.username === \"\") {\r\n      alert(\"Enter username\");\r\n      return \"\";\r\n    } else if (userData.username.length < 8) {\r\n      alert(\"Username should be greater than 8\");\r\n      return \"\";\r\n    }\r\n\r\n    if (!userData.email) {\r\n      alert(\"Email Required\");\r\n      return \"\";\r\n    } else if (\r\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(userData.email)\r\n    ) {\r\n      alert(\"Invalid email address\");\r\n      return \"\";\r\n    }\r\n\r\n    if (!userData.password) {\r\n      alert(\"Password Required\");\r\n      return \"\";\r\n    } else if (\r\n      !/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/i.test(\r\n        userData.password\r\n      )\r\n    ) {\r\n      alert(\"Provide Strong Password\");\r\n      return \"\";\r\n    }\r\n    if (!userData.passwordConfirm) {\r\n      alert(\"Conform Password Required\");\r\n      return \"\";\r\n    } else if (userData.password !== userData.passwordConfirm) {\r\n      alert(\"Password and Conform password should be same\");\r\n      return \"\";\r\n    }\r\n    if (userData.age === \"\") {\r\n      alert(\"Please provide age\");\r\n      return \"\";\r\n    }\r\n    if (userData.birthdate === \"\") {\r\n      alert(\"Please provide DOB\");\r\n      return \"\";\r\n    }\r\n    if (userData.phonenumber === \"\") {\r\n      alert(\"Please provide Mobile number\");\r\n      return \"\";\r\n    }\r\n    if (userData.address === \"\") {\r\n      alert(\"Please provide Address\");\r\n      return \"\";\r\n    }\r\n    if (userData.gender === \"\") {\r\n      alert(\"Please choose Gender\");\r\n      return \"\";\r\n    }\r\n    const login = async (userData) => {\r\n      console.log(userData);\r\n      const response = await fetch(\r\n        \"http://127.0.0.1:3000/api/v1/users/signup/\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            name: userData.username,\r\n            email: userData.email,\r\n            role: userData.typelogin,\r\n            password: userData.password,\r\n            passwordConfirm: userData.passwordConfirm,\r\n            age: userData.age,\r\n            birthdate: userData.birthdate,\r\n            phonenumber: userData.phonenumber,\r\n            gender: userData.gender,\r\n            address: userData.address,\r\n          }),\r\n        }\r\n      );\r\n      const json = await response.json();\r\n      console.log(json);\r\n      alert(json.status);\r\n\r\n      if (json.status === \"sucess\") {\r\n        Navigate(\"/loginregister\");\r\n      }\r\n    };\r\n    login(userData);\r\n  };\r\n\r\n  // const response = await fetch(\"http://127.0.0.1:3000/api/v1/users/signup/\", {\r\n  //   method: \"POST\",\r\n  //   body: JSON.stringify({ registered }),\r\n  // });\r\n  // alert(await response.json());\r\n  // axios\r\n  //   .post(\"http://localhost:3000/api/v1/users/signup\", registered)\r\n  //   .then((response) => {\r\n  //     alert(response.data.status);\r\n  //     console.log(response);\r\n  //   });\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"app-wrapper\">\r\n        <div>\r\n          <h2 className=\"title\">Create Account</h2>\r\n        </div>\r\n        <form className=\"form-wrapper\" onSubmit={onSubmit}>\r\n          <div className=\"name\">\r\n            <div className=\"gender\">\r\n              <label className=\"label\">Login Type:</label>\r\n              <input\r\n                onChange={(e) => changeHandler(e)}\r\n                type=\"radio\"\r\n                value=\"User\"\r\n                name=\"typelogin\"\r\n                className=\"radi\"\r\n              />{\" \"}\r\n              User\r\n              <input\r\n                onChange={(e) => changeHandler(e)}\r\n                type=\"radio\"\r\n                value=\"Donar\"\r\n                name=\"typelogin\"\r\n                className=\"radi\"\r\n              />{\" \"}\r\n              Donar\r\n            </div>\r\n\r\n            <label className=\"label\">User name</label>\r\n            <input\r\n              className=\"input\"\r\n              type=\"text\"\r\n              name=\"username\"\r\n              onChange={(e) => changeHandler(e)}\r\n              value={changeHandler.username}\r\n            />\r\n          </div>\r\n          <div className=\"email\">\r\n            <label className=\"label\">Email</label>\r\n            <input\r\n              className=\"input\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              onChange={(e) => changeHandler(e)}\r\n              value={changeHandler.email}\r\n            />\r\n          </div>\r\n          <div className=\"password\">\r\n            <label className=\"label\">password</label>\r\n            <input\r\n              className=\"input\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              onChange={(e) => changeHandler(e)}\r\n              value={changeHandler.password}\r\n            />\r\n          </div>\r\n          <div className=\"password\">\r\n            <label className=\"label\">Confirm password</label>\r\n            <input\r\n              className=\"input\"\r\n              type=\"password\"\r\n              name=\"passwordConfirm\"\r\n              onChange={(e) => changeHandler(e)}\r\n              value={changeHandler.passwordConfirm}\r\n            />\r\n          </div>\r\n          <div className=\"num\">\r\n            <label className=\"label\">Age</label>\r\n            <input\r\n              className=\"input\"\r\n              type=\"number\"\r\n              name=\"age\"\r\n              onChange={(e) => changeHandler(e)}\r\n              value={changeHandler.age}\r\n            />\r\n          </div>\r\n          <div className=\"num\">\r\n            <label className=\"label\">Birth date</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"input\"\r\n              name=\"birthdate\"\r\n              onChange={(e) => changeHandler(e)}\r\n              value={changeHandler.birthdate}\r\n              onFocus={(e) => (e.target.type = \"date\")}\r\n              onBlur={(e) => (e.target.type = \"text\")}\r\n            />\r\n          </div>\r\n          <div className=\"name\">\r\n            <label className=\"label\">Phone Number</label>\r\n            <input\r\n              className=\"input\"\r\n              type=\"text\"\r\n              name=\"phonenumber\"\r\n              onChange={(e) => changeHandler(e)}\r\n              value={changeHandler.phonenumber}\r\n            />\r\n          </div>\r\n          <div className=\"gender\">\r\n            <label className=\"label\">Gender:</label>\r\n            <input\r\n              onChange={(e) => changeHandler(e)}\r\n              type=\"radio\"\r\n              value=\"Male\"\r\n              name=\"gender\"\r\n              className=\"radi\"\r\n            />{\" \"}\r\n            Male\r\n            <input\r\n              onChange={(e) => changeHandler(e)}\r\n              type=\"radio\"\r\n              value=\"Female\"\r\n              name=\"gender\"\r\n              className=\"radi\"\r\n            />{\" \"}\r\n            Female\r\n            <input\r\n              onChange={(e) => changeHandler(e)}\r\n              type=\"radio\"\r\n              value=\"Other\"\r\n              name=\"gender\"\r\n              className=\"radi\"\r\n            />{\" \"}\r\n            Other\r\n          </div>\r\n          <div className=\"name\">\r\n            <label className=\"label\">Address</label>\r\n            <input\r\n              className=\"input\"\r\n              type=\"textarea\"\r\n              name=\"address\"\r\n              onChange={(e) => changeHandler(e)}\r\n              value={changeHandler.address}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <button className=\"submit\" value=\"Submit\">\r\n              Sign Up\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Registernew;\r\n","E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\About.js",[],"E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\Home.js",[],"E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\Contact.js",[],"E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\Login.js",["162","163"],"import React from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nconst Login = () => {\r\n  const [userData, setUserData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    type: \"Admin\",\r\n  });\r\n\r\n  const Navigate = useNavigate();\r\n  const changeHandler = (e) => {\r\n    const { name, value, type } = e.target;\r\n    setUserData({ ...userData, [name]: value });\r\n  };\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const login = async (email, password, type) => {\r\n      const response = await fetch(\"/api/v1/users/login/\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          email: email,\r\n          password: password,\r\n          role: type,\r\n        }),\r\n      });\r\n\r\n      const json = await response.json();\r\n      console.log(response);\r\n      if (json.status === \"sucess\") {\r\n        // alert(type);\r\n        if (type === \"Admin\") {\r\n          Navigate(\"/Adminpage\");\r\n        } else if (type === \"Donar\") {\r\n          Navigate(\"/Donarpage\");\r\n        } else if (type === \"User\") {\r\n          Navigate(\"/Adminpage\");\r\n        }\r\n      } else if (json.status === \"fail\") {\r\n        console.log(\"Failed !!!\");\r\n        alert(json.message);\r\n      }\r\n    };\r\n\r\n    login(userData.email, userData.password, userData.type);\r\n  };\r\n  return (\r\n    <div className=\"login-page\">\r\n      <div className=\"container\">\r\n        <div className=\"app-wrapper\">\r\n          <div>\r\n            <h2 className=\"title\">Login</h2>\r\n          </div>\r\n          <form className=\"form-wrapper\" onSubmit={onSubmit}>\r\n            <div className=\"email\">\r\n              <label className=\"label\">Type</label>\r\n              <select\r\n                name=\"type\"\r\n                onChange={(e) => changeHandler(e)}\r\n                value={changeHandler.type}\r\n              >\r\n                <option value=\"Admin\">Admin</option>\r\n                <option value=\"Donar\">Donar</option>\r\n                <option value=\"User\">User</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"email\">\r\n              <label className=\"label\">Email</label>\r\n              <input\r\n                className=\"input\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                onChange={(e) => changeHandler(e)}\r\n                value={changeHandler.email}\r\n              />\r\n            </div>\r\n            <div className=\"password\">\r\n              <label className=\"label\">password</label>\r\n              <input\r\n                className=\"input\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                onChange={(e) => changeHandler(e)}\r\n                value={changeHandler.password}\r\n              />\r\n            </div>\r\n            <div>\r\n              <button className=\"submit\" value=\"Submit\">\r\n                Sign In\r\n              </button>\r\n            </div>\r\n          </form>\r\n          <form\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              Navigate(\"/Registernew\");\r\n            }}\r\n          >\r\n            <label>New user ? </label>\r\n            <input type=\"submit\" value=\"Sign up\" />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\Adminpage.js",["164","165","166","167","168","169","170","171","172","173","174","175","176","177"],"import React from \"react\";\r\nimport Sidebar from '../components/Admin/Adminsidebar';\r\nimport { Routes, Route } from 'react-router-dom';\r\n\r\n\r\nimport {AdminDashboard} from './AdminDashboard';\r\nimport {Regdonors} from './Admin/Regdonors';\r\nimport {Addstate, Managestate } from \"./Admin/State\";\r\nimport {Addcity, Managecity } from \"./Admin/City\";\r\nimport { Listedfoods } from \"./Admin/Listedfoods\";\r\nimport { Requests, New, Pickcom, Rejected ,All} from './Admin/Requests';\r\n\r\n\r\nexport const Adminpage = () => {\r\n  return (\r\n    <div>\r\n      <Sidebar />\r\n      {/* <Routes>\r\n      <Route path=\"/about\" element={<About></About>} />\r\n        <Route exact path=\"/dashboard\" element={<AdminDashboard></AdminDashboard>} />\r\n        <Route path='/state/add' exact element={<Addstate></Addstate>} />\r\n        <Route path='/state/manage' exact element={<Managestate></Managestate>} />\r\n        <Route path='/city/add' exact element={<Addcity></Addcity>} />\r\n        <Route path='/city/manage' exact element={<Managecity></Managecity>} />\r\n        <Route path='/regfooddonors' exact element={<Regdonors></Regdonors>} />\r\n        <Route path='/listed/food' exact element={<Listedfoods></Listedfoods>} />\r\n        <Route path='/request' exact element={<Requests></Requests>} />\r\n        <Route path='/request/new' exact element={<New></New>} />\r\n        <Route path='/request/pickcom' exact element={<Pickcom></Pickcom>} />\r\n        <Route path='/request/reject' exact element={<Rejected></Rejected>} />\r\n        <Route path='/request/all' exact element={<All></All>} />\r\n\r\n        </Routes> */}\r\n\r\n    </div>\r\n  );\r\n};\r\n","E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\AdminDashboard.js",["178","179","180","181","182"],"import React from 'react';\r\nimport img from './img.png';\r\nimport img2 from './img2.png';\r\nimport './AdminDashboard.css';\r\n export const  AdminDashboard = () => {\r\n  return (\r\n    <div className='hiii'>\r\n      \r\n    <div className='hii' style={{backgroundColor: \"blue\",position:'relative'}}>\r\n      <div className='imga'>\r\n      <img src={img} style={{height: \"70px\",width:\"70px\" ,alignItems:\"center\"}} />\r\n      </div>\r\n      <div className='hibro'>\r\n      <h2>Total Listed Food</h2>\r\n      <h1>0</h1>\r\n      </div>\r\n    </div>\r\n    <div className='hii' style={{backgroundColor: \"green\" ,position:'relative'}}>\r\n    <div className='imga'>\r\n      <img src={img2} style={{height: \"70px\",width:\"70px\" ,alignItems:\"center\"}} />\r\n      </div>\r\n    <div>\r\n      <h2>Request Completed</h2>\r\n      <h1>0</h1>\r\n      </div>\r\n    </div>\r\n    <div className='hii' style={{backgroundColor: \"red\" ,position:'relative'}}>\r\n    <div className='imga'>\r\n      <img src={img2} style={{height: \"70px\",width:\"70px\" ,alignItems:\"center\"}} />\r\n      </div>\r\n    <div >\r\n      <h2>Rejected Requests</h2>\r\n      <h1>0</h1>\r\n      </div>\r\n    </div>\r\n    <div className='hii' style={{backgroundColor: \"black\", position:'relative'}}>\r\n    <div className='imga'>\r\n      <img src={img2} style={{height: \"70px\",width:\"70px\" ,alignItems:\"center\"}} />\r\n      </div>\r\n    <div >\r\n      <h2>All Requests</h2>\r\n      <h1>0</h1>\r\n      </div>\r\n    </div>\r\n    <div className='hii' style={{backgroundColor: \"grey\" ,position:'relative'}}>\r\n    <div className='imga'>\r\n      <img src={img2} style={{height: \"70px\",width:\"70px\" ,alignItems:\"center\"}} />\r\n      </div>\r\n    <div >\r\n      <h2>New Requests</h2>\r\n      <h1>0</h1>\r\n      </div>\r\n    </div>\r\n    </div>  \r\n  );\r\n};\r\n","E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\Donarpage.js",["183","184","185","186","187","188","189","190"],"import React from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Sidebar from \"../components/DonarSidebar\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\n\r\n// import {AdminDashboard} from './AdminDashboard';\r\n// import Addfood from './Listfooddetails';\r\n// import Manage from './Listfooddetails';\r\nimport { Requests, New, Pickcom, Rejected, All } from \"./Requests\";\r\n// import Dashboard from \"./DonarDashboard\";\r\n\r\nexport const Donarpage = () => {\r\n  const Loginnot = async () => {\r\n    const Navigate = useNavigate();\r\n\r\n    const currentuser = await fetch(\"/api/v1/users/me/\");\r\n    const current = await currentuser.json();\r\n    console.log(current);\r\n    if (current.status === \"failure\") {\r\n      Navigate(\"/loginregister\");\r\n      alert(current.Error);\r\n    }\r\n  };\r\n  Loginnot();\r\n  return (\r\n    <div>\r\n      <Sidebar />\r\n      {/* <Routes>\r\n        <Route path=\"/dashboard\" exact element={<Dashboard></Dashboard>} />\r\n        <Route path='/listfooddetails' exact component={Listfooddetails} />\r\n        <Route path='/listfooddetails/add' exact element={<Addfood></Addfood>} />\r\n        <Route path='/listfooddetails/manage' exact element={<Manage></Manage>} />\r\n        <Route path=\"/request\" exact element={<Requests></Requests>} />\r\n        <Route path=\"/request/new\" exact element={<New></New>} />\r\n        <Route path=\"/request/pickcom\" exact element={<Pickcom></Pickcom>} />\r\n        <Route path=\"/request/reject\" exact element={<Rejected></Rejected>} />\r\n        <Route path=\"/request/all\" exact element={<All></All>} />\r\n      </Routes> */}\r\n    </div>\r\n  );\r\n};\r\n","E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\Listfooddetails.js",[],"E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\Menu.js",["191"],"E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\DonarDashboard.js",["192","193","194","195","196","197","198","199"],"import React, { useState } from \"react\";\r\nimport img from \"./img.png\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport img2 from \"./img2.png\";\r\nimport \"./Dashboard.css\";\r\nimport { RiPassportFill } from \"react-icons/ri\";\r\nexport const DonarDashboard = () => {\r\n  const [foodcount, setfoodcount] = useState(0);\r\n\r\n  function changefood(food) {\r\n    setfoodcount(foodcount + food);\r\n  }\r\n  const Loginnot = async () => {\r\n    const Navigate = useNavigate();\r\n\r\n    const currentuser = await fetch(\"/api/v1/users/me/\");\r\n    const current = await currentuser.json();\r\n    // console.log(current);\r\n    if (current.status === \"failure\") {\r\n      Navigate(\"/loginregister\");\r\n      alert(current.Error);\r\n      return;\r\n    }\r\n  };\r\n  Loginnot();\r\n\r\n  // const [foodcount, setfoodcount] = useState(0);\r\n  var food = 0;\r\n  const Listfood = async () => {\r\n    const currentuser = await fetch(\"/api/v1/users/me/\");\r\n    const current = await currentuser.json();\r\n    if (current.status === \"failure\") {\r\n      return;\r\n    }\r\n    const userid = current.user._id;\r\n    const Listedfoods = await fetch(\"/api/v1/tours/\" + userid);\r\n    // console.log(\"/api/v1/tours/\" + userid);\r\n    const foods = await Listedfoods.json();\r\n    // console.log(foods);\r\n    for (var i = 0; i < foods.results; i++) {\r\n      if (foods.data.data[i].userid !== current.user._id) {\r\n        // console.log(\"dfhfghfgh\");\r\n        continue;\r\n      }\r\n      const arrsize = foods.data.data[i].fooddetails.length;\r\n      for (var j = 0; j < arrsize; j++) {\r\n        food += parseInt(foods.data.data[i].fooddetails[j].number);\r\n      }\r\n      // console.log(foods.data.data[i].fooddetails.length);\r\n    }\r\n    // setloading(true);\r\n    // console.log(food);\r\n    setfoodcount(food);\r\n  };\r\n  // setfoodcount(food);\r\n  Listfood();\r\n\r\n  return (\r\n    <div className=\"hiii\">\r\n      <div\r\n        className=\"hii\"\r\n        style={{\r\n          backgroundColor: \"#FF1053\",\r\n          position: \"relative\",\r\n          borderRadius: \"10px\",\r\n          color: \"black\",\r\n        }}\r\n      >\r\n        <div className=\"imga\">\r\n          <img\r\n            src={img}\r\n            style={{ height: \"70px\", width: \"70px\", alignItems: \"center\" }}\r\n          />\r\n        </div>\r\n        <div className=\"hibro\">\r\n          <h2>Total Listed Food</h2>\r\n          <h1 style={{ color: \"black\" }}>{foodcount}</h1>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"hii\"\r\n        style={{\r\n          backgroundColor: \"#6C6EA0\",\r\n          position: \"relative\",\r\n          borderRadius: \"10px\",\r\n          color: \"black\",\r\n        }}\r\n      >\r\n        <div className=\"imga\">\r\n          <img\r\n            src={img2}\r\n            style={{ height: \"70px\", width: \"70px\", alignItems: \"center\" }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <h2>Request Completed</h2>\r\n          <h1 style={{ color: \"black\" }}>0</h1>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"hii\"\r\n        style={{\r\n          backgroundColor: \"#66C7F4\",\r\n          position: \"relative\",\r\n          borderRadius: \"10px\",\r\n          color: \"black\",\r\n        }}\r\n      >\r\n        <div className=\"imga\">\r\n          <img\r\n            src={img2}\r\n            style={{ height: \"70px\", width: \"70px\", alignItems: \"center\" }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <h2>Rejected Requests</h2>\r\n          <h1 style={{ color: \"black\" }}>0</h1>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"hii\"\r\n        style={{\r\n          backgroundColor: \"#C1CAD6\",\r\n          position: \"relative\",\r\n          borderRadius: \"10px\",\r\n          color: \"black\",\r\n        }}\r\n      >\r\n        <div className=\"imga\">\r\n          <img\r\n            src={img2}\r\n            style={{ height: \"70px\", width: \"70px\", alignItems: \"center\" }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <h2>All Requests</h2>\r\n          <h1 style={{ color: \"black\" }}>0</h1>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"hii\"\r\n        style={{\r\n          backgroundColor: \"#FFFFFF\",\r\n          position: \"relative\",\r\n          borderRadius: \"10px\",\r\n          color: \"black\",\r\n        }}\r\n      >\r\n        <div className=\"imga\">\r\n          <img\r\n            src={img2}\r\n            style={{ height: \"70px\", width: \"70px\", alignItems: \"center\" }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <h2>New Requests</h2>\r\n          <h1 style={{ color: \"black\" }}>0</h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","E:\\food waste\\foodwastemanagement\\Client\\src\\components\\DonarSidebar.js",[],"E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\Admin\\Regdonors.js",[],"E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\Admin\\State.js",[],"E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\Admin\\Requests.js",[],"E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\Admin\\City.js",[],"E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\Admin\\Listedfoods.js",[],"E:\\food waste\\foodwastemanagement\\Client\\src\\components\\Admin\\Adminsidebar.js",["200","201"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link, Navigate } from \"react-router-dom\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport { SidebarData } from \"./SidebarData\";\r\nimport SubMenu from \"./SubMenu\";\r\nimport { IconContext } from \"react-icons/lib\";\r\n\r\nimport { Routes, Route } from \"react-router-dom\";\r\n\r\nconst Nav = styled.div`\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst NavIcon = styled(Link)`\r\n  margin-left: 2rem;\r\n  font-size: 2rem;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst SidebarNav = styled.nav`\r\n  background: #1e1b18;\r\n  margin-top: 72px;\r\n  width: 250px;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  position: absolute;\r\n  top: 0;\r\n  left: ${({ sidebar }) => (sidebar ? \"0\" : \"-100%\")};\r\n  transition: 350ms;\r\n  z-index: 10;\r\n`;\r\n\r\nconst SidebarWrap = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst Adminsidebar = () => {\r\n  const [sidebar, setSidebar] = useState(true);\r\n\r\n  const showSidebar = () => setSidebar(!sidebar);\r\n\r\n  return (\r\n    <IconContext.Provider value={{ color: \"brown\" }}>\r\n      <Nav>\r\n        <NavIcon to=\"#\">\r\n          <FaIcons.FaBars onClick={showSidebar} />\r\n        </NavIcon>\r\n      </Nav>\r\n      <SidebarNav sidebar={sidebar}>\r\n        <SidebarWrap>\r\n          <NavIcon to=\"#\">\r\n            <AiIcons.AiOutlineClose onClick={showSidebar} />\r\n          </NavIcon>\r\n          {SidebarData.map((item, index) => {\r\n            return (\r\n              <SubMenu\r\n                item={item}\r\n                key={index}\r\n                onClick={() => {\r\n                  Navigate(\"/dashboard\");\r\n                }}\r\n              />\r\n            );\r\n          })}\r\n        </SidebarWrap>\r\n      </SidebarNav>\r\n    </IconContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Adminsidebar;\r\n","E:\\food waste\\foodwastemanagement\\Client\\src\\components\\MenuItem.js",[],"E:\\food waste\\foodwastemanagement\\Client\\src\\Pages\\Requests.js",[],"E:\\food waste\\foodwastemanagement\\Client\\src\\components\\TodoList.js",["202","203","204"],"import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport Todo from \"./Todo\";\r\nimport { METHODS } from \"http\";\r\n// import { Formend } from \"./TodoForm\";\r\n\r\nfunction TodoList() {\r\n  const [todos, setTodos] = useState([]);\r\n  const [fooddetails, setFood] = useState({\r\n    description: \"\",\r\n    date: \"\",\r\n    address: \"\",\r\n    state: \"\",\r\n    city: \"\",\r\n    mobile: \"\",\r\n  });\r\n  const Navigate = useNavigate();\r\n  const changeHandler = (e) => {\r\n    e.preventDefault();\r\n    const { name, value, type } = e.target;\r\n    // console.log(name, value);\r\n    setFood({ ...fooddetails, [name]: value });\r\n  };\r\n\r\n  const OnSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (todos.length <= 0) {\r\n      alert(\"Pls Enter atleast one food\");\r\n      return;\r\n    }\r\n    if (!fooddetails.address) {\r\n      alert(\"Pls Enter Address !!!\");\r\n      return;\r\n    }\r\n    if (!fooddetails.city) {\r\n      alert(\"Pls Enter City !!\");\r\n      return;\r\n    }\r\n    if (!fooddetails.date) {\r\n      alert(\"Pls Enter Date!!!\");\r\n      return;\r\n    }\r\n    if (!fooddetails.description) {\r\n      alert(\"Pls Enter Description about food !!!\");\r\n      return;\r\n    }\r\n    if (!fooddetails.mobile) {\r\n      alert(\"Pls Enter mobile number to contact !!!\");\r\n      return;\r\n    }\r\n    if (!fooddetails.state) {\r\n      alert(\"Pls enter State !!\");\r\n      return;\r\n    }\r\n    console.log(fooddetails);\r\n    console.log(todos);\r\n    console.log({\r\n      fooddetails: todos,\r\n      description: fooddetails[\"description\"],\r\n      data: fooddetails[\"date\"],\r\n      address: fooddetails[\"address\"],\r\n      state: fooddetails[\"state\"],\r\n      city: fooddetails[\"city\"],\r\n      mobile: fooddetails[\"mobile\"],\r\n    });\r\n\r\n    const addfood = async (todos, fooddetails) => {\r\n      const currentuser = await fetch(\"/api/v1/users/me/\");\r\n      const current = await currentuser.json();\r\n      console.log(\"todos\", todos);\r\n      console.log(\"food details\", fooddetails);\r\n      const response = await fetch(\"/api/v1/tours/\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          userid: current.user._id,\r\n          fooddetails: todos,\r\n          description: fooddetails[\"description\"],\r\n          data: fooddetails[\"data\"],\r\n          address: fooddetails[\"address\"],\r\n          state: fooddetails[\"state\"],\r\n          city: fooddetails[\"city\"],\r\n          mobile: fooddetails[\"mobile\"],\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n\r\n      if (json.status === \"success\") {\r\n        alert(\"Successfully Added your Food\");\r\n        Navigate(\"/Donarpage/dashboard\");\r\n      } else {\r\n        alert(json.status);\r\n      }\r\n      // console.log(json);\r\n      // alert(json.status);\r\n    };\r\n\r\n    addfood(todos, fooddetails);\r\n  };\r\n\r\n  const addTodo = (todo) => {\r\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return;\r\n    }\r\n    if (!todo.number || /^\\s*$/.test(todo.number)) {\r\n      return;\r\n    }\r\n    const newTodos = [todo, ...todos];\r\n\r\n    setTodos(newTodos);\r\n    console.log(...todos);\r\n    // alert(...todos);\r\n  };\r\n\r\n  const updateTodo = (todoId, newValue) => {\r\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n      return;\r\n    }\r\n\r\n    setTodos((prev) =>\r\n      prev.map((item) => (item.id === todoId ? newValue : item))\r\n    );\r\n  };\r\n\r\n  const removeTodo = (id) => {\r\n    const removedArr = [...todos].filter((todo) => todo.id !== id);\r\n\r\n    setTodos(removedArr);\r\n  };\r\n\r\n  const completeTodo = (id) => {\r\n    let updatedTodos = todos.map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  const Loginnot = async () => {\r\n    const currentuser = await fetch(\"/api/v1/users/me/\");\r\n    const current = await currentuser.json();\r\n    console.log(current);\r\n    if (current.status === \"failure\") {\r\n      Navigate(\"/loginregister\");\r\n      alert(current.Error);\r\n    }\r\n  };\r\n  Loginnot();\r\n\r\n  return (\r\n    <>\r\n      <h1>List Your Food Details</h1>\r\n      <TodoForm onSubmit={addTodo} />\r\n      <Todo\r\n        todos={todos}\r\n        completeTodo={completeTodo}\r\n        removeTodo={removeTodo}\r\n        updateTodo={updateTodo}\r\n      />\r\n      <form onSubmit={OnSubmit}>\r\n        <div className=\"name\">\r\n          <label className=\"label\">Description</label>\r\n          <input\r\n            className=\"input\"\r\n            type=\"textarea\"\r\n            name=\"description\"\r\n            onChange={(e) => changeHandler(e)}\r\n            value={changeHandler.description}\r\n          />\r\n        </div>\r\n        <div className=\"num\">\r\n          <label className=\"label\">Pickup Date</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"input\"\r\n            name=\"date\"\r\n            onChange={(e) => changeHandler(e)}\r\n            onFocus={(e) => (e.target.type = \"date\")}\r\n            onBlur={(e) => (e.target.type = \"text\")}\r\n          />\r\n        </div>\r\n        <div className=\"name\">\r\n          <label className=\"label\">Pickup Address</label>\r\n          <input\r\n            className=\"input\"\r\n            name=\"address\"\r\n            type=\"textarea\"\r\n            onChange={(e) => changeHandler(e)}\r\n          />\r\n        </div>\r\n        <div className=\"name\">\r\n          <label className=\"label\">Choose State</label>\r\n          <select\r\n            name=\"state\"\r\n            id=\"state\"\r\n            className=\"input\"\r\n            onChange={(e) => changeHandler(e)}\r\n          >\r\n            <option></option>\r\n            <option value=\"Andhra Pradesh\">Andhra Pradesh</option>\r\n            <option value=\"Andaman and Nicobar Islands\">\r\n              Andaman and Nicobar Islands\r\n            </option>\r\n            <option value=\"Arunachal Pradesh\">Arunachal Pradesh</option>\r\n            <option value=\"Assam\">Assam</option>\r\n            <option value=\"Bihar\">Bihar</option>\r\n            <option value=\"Chandigarh\">Chandigarh</option>\r\n            <option value=\"Chhattisgarh\">Chhattisgarh</option>\r\n            <option value=\"Dadar and Nagar Haveli\">\r\n              Dadar and Nagar Haveli\r\n            </option>\r\n            <option value=\"Daman and Diu\">Daman and Diu</option>\r\n            <option value=\"Delhi\">Delhi</option>\r\n            <option value=\"Lakshadweep\">Lakshadweep</option>\r\n            <option value=\"Puducherry\">Puducherry</option>\r\n            <option value=\"Goa\">Goa</option>\r\n            <option value=\"Gujarat\">Gujarat</option>\r\n            <option value=\"Haryana\">Haryana</option>\r\n            <option value=\"Himachal Pradesh\">Himachal Pradesh</option>\r\n            <option value=\"Jammu and Kashmir\">Jammu and Kashmir</option>\r\n            <option value=\"Jharkhand\">Jharkhand</option>\r\n            <option value=\"Karnataka\">Karnataka</option>\r\n            <option value=\"Kerala\">Kerala</option>\r\n            <option value=\"Madhya Pradesh\">Madhya Pradesh</option>\r\n            <option value=\"Maharashtra\">Maharashtra</option>\r\n            <option value=\"Manipur\">Manipur</option>\r\n            <option value=\"Meghalaya\">Meghalaya</option>\r\n            <option value=\"Mizoram\">Mizoram</option>\r\n            <option value=\"Nagaland\">Nagaland</option>\r\n            <option value=\"Odisha\">Odisha</option>\r\n            <option value=\"Punjab\">Punjab</option>\r\n            <option value=\"Rajasthan\">Rajasthan</option>\r\n            <option value=\"Sikkim\">Sikkim</option>\r\n            <option value=\"Tamil Nadu\">Tamil Nadu</option>\r\n            <option value=\"Telangana\">Telangana</option>\r\n            <option value=\"Tripura\">Tripura</option>\r\n            <option value=\"Uttar Pradesh\">Uttar Pradesh</option>\r\n            <option value=\"Uttarakhand\">Uttarakhand</option>\r\n            <option value=\"West Bengal\">West Bengal</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"name\">\r\n          <label className=\"label\">Choose City</label>\r\n          <input\r\n            className=\"input\"\r\n            type=\"text\"\r\n            name=\"city\"\r\n            onChange={(e) => changeHandler(e)}\r\n          />\r\n        </div>\r\n        <div className=\"name\">\r\n          <label className=\"label\">Contact person mobile number</label>\r\n          <input\r\n            className=\"input\"\r\n            type=\"number\"\r\n            name=\"mobile\"\r\n            onChange={(e) => changeHandler(e)}\r\n          />\r\n        </div>\r\n        <div className=\"name\">\r\n          <label className=\"label\">Pictures:</label>\r\n          <input className=\"input\" type=\"file\" />\r\n        </div>\r\n        <div>\r\n          <button className=\"submit\" value=\"Submit\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","E:\\food waste\\foodwastemanagement\\Client\\src\\components\\SubMenu.js",[],"E:\\food waste\\foodwastemanagement\\Client\\src\\components\\SidebarData.js",[],"E:\\food waste\\foodwastemanagement\\Client\\src\\components\\Admin\\SidebarData.js",[],"E:\\food waste\\foodwastemanagement\\Client\\src\\components\\Admin\\SubMenu.js",[],"E:\\food waste\\foodwastemanagement\\Client\\src\\helpers\\MenuList.js",[],"E:\\food waste\\foodwastemanagement\\Client\\src\\Menu\\Menu.js",[],"E:\\food waste\\foodwastemanagement\\Client\\src\\components\\TodoForm.js",["205"],"import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction TodoForm(props) {\r\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\r\n  const [input1, setInput1] = useState(props.edit ? props.edit.number : \"\");\r\n\r\n  const inputRef = useRef(null);\r\n  const inputRef1 = useRef(null);\r\n\r\n  // useEffect(() => {\r\n  //   inputRef.current.focus();\r\n  // });\r\n\r\n  const handleChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n  const handleChange1 = (e) => {\r\n    setInput1(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random() * 10000),\r\n      text: input,\r\n      number: input1,\r\n    });\r\n    setInput(\"\");\r\n    setInput1(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"todo-form\">\r\n      {props.edit ? (\r\n        <>\r\n          <input\r\n            placeholder=\"Update your item\"\r\n            value={input}\r\n            onChange={handleChange}\r\n            name=\"text\"\r\n            ref={inputRef}\r\n            className=\"todo-input edit\"\r\n          />\r\n          <input\r\n            placeholder=\"Update your person\"\r\n            value={input1}\r\n            onChange={handleChange1}\r\n            name=\"number\"\r\n            type={\"number\"}\r\n            ref={inputRef1}\r\n            className=\"todo-input edit\"\r\n          />\r\n\r\n          <button onClick={handleSubmit} className=\"todo-button edit\">\r\n            Update\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div>\r\n            <input\r\n              placeholder=\"Add Food\"\r\n              value={input}\r\n              onChange={handleChange}\r\n              name=\"text\"\r\n              className=\"todo-input\"\r\n              ref={inputRef}\r\n            />\r\n            <input\r\n              placeholder=\"Add No of Person\"\r\n              value={input1}\r\n              type={\"number\"}\r\n              onChange={handleChange1}\r\n              name=\"number\"\r\n              className=\"todo-input\"\r\n              ref={inputRef1}\r\n            />\r\n          </div>\r\n          <button onClick={handleSubmit} className=\"todo-button\">\r\n            Add More\r\n          </button>\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n\r\nexport const Formend = () => {\r\n  return (\r\n    <form>\r\n      <div className=\"name\">\r\n        <label className=\"label\">Description</label>\r\n        <input className=\"input\" type=\"textarea\" />\r\n      </div>\r\n      <div className=\"num\">\r\n        <label className=\"label\">Pickup Date</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"input\"\r\n          onChange={(e) => console.log(e.target.value)}\r\n          onFocus={(e) => (e.target.type = \"date\")}\r\n          onBlur={(e) => (e.target.type = \"text\")}\r\n        />\r\n      </div>\r\n      <div className=\"name\">\r\n        <label className=\"label\">Pickup Address</label>\r\n        <input className=\"input\" type=\"textarea\" />\r\n      </div>\r\n      <div className=\"name\">\r\n        <label className=\"label\">Choose State</label>\r\n        <select name=\"state\" id=\"state\" className=\"input\">\r\n          <option></option>\r\n          <option value=\"Andhra Pradesh\">Andhra Pradesh</option>\r\n          <option value=\"Andaman and Nicobar Islands\">\r\n            Andaman and Nicobar Islands\r\n          </option>\r\n          <option value=\"Arunachal Pradesh\">Arunachal Pradesh</option>\r\n          <option value=\"Assam\">Assam</option>\r\n          <option value=\"Bihar\">Bihar</option>\r\n          <option value=\"Chandigarh\">Chandigarh</option>\r\n          <option value=\"Chhattisgarh\">Chhattisgarh</option>\r\n          <option value=\"Dadar and Nagar Haveli\">Dadar and Nagar Haveli</option>\r\n          <option value=\"Daman and Diu\">Daman and Diu</option>\r\n          <option value=\"Delhi\">Delhi</option>\r\n          <option value=\"Lakshadweep\">Lakshadweep</option>\r\n          <option value=\"Puducherry\">Puducherry</option>\r\n          <option value=\"Goa\">Goa</option>\r\n          <option value=\"Gujarat\">Gujarat</option>\r\n          <option value=\"Haryana\">Haryana</option>\r\n          <option value=\"Himachal Pradesh\">Himachal Pradesh</option>\r\n          <option value=\"Jammu and Kashmir\">Jammu and Kashmir</option>\r\n          <option value=\"Jharkhand\">Jharkhand</option>\r\n          <option value=\"Karnataka\">Karnataka</option>\r\n          <option value=\"Kerala\">Kerala</option>\r\n          <option value=\"Madhya Pradesh\">Madhya Pradesh</option>\r\n          <option value=\"Maharashtra\">Maharashtra</option>\r\n          <option value=\"Manipur\">Manipur</option>\r\n          <option value=\"Meghalaya\">Meghalaya</option>\r\n          <option value=\"Mizoram\">Mizoram</option>\r\n          <option value=\"Nagaland\">Nagaland</option>\r\n          <option value=\"Odisha\">Odisha</option>\r\n          <option value=\"Punjab\">Punjab</option>\r\n          <option value=\"Rajasthan\">Rajasthan</option>\r\n          <option value=\"Sikkim\">Sikkim</option>\r\n          <option value=\"Tamil Nadu\">Tamil Nadu</option>\r\n          <option value=\"Telangana\">Telangana</option>\r\n          <option value=\"Tripura\">Tripura</option>\r\n          <option value=\"Uttar Pradesh\">Uttar Pradesh</option>\r\n          <option value=\"Uttarakhand\">Uttarakhand</option>\r\n          <option value=\"West Bengal\">West Bengal</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"name\">\r\n        <label className=\"label\">Choose City</label>\r\n        <input className=\"input\" type=\"text\" />\r\n      </div>\r\n      <div className=\"name\">\r\n        <label className=\"label\">Contact person mobile number</label>\r\n        <input className=\"input\" type=\"number\" />\r\n      </div>\r\n      <div className=\"name\">\r\n        <label className=\"label\">Pictures:</label>\r\n        <input className=\"input\" type=\"file\" />\r\n      </div>\r\n      <div>\r\n        <button className=\"submit\" value=\"Submit\">\r\n          Submit\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","E:\\food waste\\foodwastemanagement\\Client\\src\\components\\Todo.js",[],{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","severity":1,"message":"211","line":4,"column":20,"nodeType":"212","messageId":"213","endLine":4,"endColumn":26},{"ruleId":"210","severity":1,"message":"214","line":7,"column":3,"nodeType":"212","messageId":"213","endLine":7,"endColumn":16},{"ruleId":"210","severity":1,"message":"215","line":9,"column":10,"nodeType":"212","messageId":"213","endLine":9,"endColumn":14},{"ruleId":"210","severity":1,"message":"216","line":11,"column":8,"nodeType":"212","messageId":"213","endLine":11,"endColumn":21},{"ruleId":"210","severity":1,"message":"217","line":1,"column":17,"nodeType":"212","messageId":"213","endLine":1,"endColumn":26},{"ruleId":"210","severity":1,"message":"218","line":2,"column":8,"nodeType":"212","messageId":"213","endLine":2,"endColumn":13},{"ruleId":"210","severity":1,"message":"219","line":3,"column":10,"nodeType":"212","messageId":"213","endLine":3,"endColumn":14},{"ruleId":"210","severity":1,"message":"220","line":21,"column":26,"nodeType":"212","messageId":"213","endLine":21,"endColumn":30},{"ruleId":"210","severity":1,"message":"219","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":14},{"ruleId":"210","severity":1,"message":"220","line":13,"column":26,"nodeType":"212","messageId":"213","endLine":13,"endColumn":30},{"ruleId":"210","severity":1,"message":"221","line":3,"column":10,"nodeType":"212","messageId":"213","endLine":3,"endColumn":16},{"ruleId":"210","severity":1,"message":"222","line":3,"column":18,"nodeType":"212","messageId":"213","endLine":3,"endColumn":23},{"ruleId":"210","severity":1,"message":"223","line":6,"column":9,"nodeType":"212","messageId":"213","endLine":6,"endColumn":23},{"ruleId":"210","severity":1,"message":"224","line":7,"column":9,"nodeType":"212","messageId":"213","endLine":7,"endColumn":18},{"ruleId":"210","severity":1,"message":"225","line":8,"column":9,"nodeType":"212","messageId":"213","endLine":8,"endColumn":17},{"ruleId":"210","severity":1,"message":"226","line":8,"column":19,"nodeType":"212","messageId":"213","endLine":8,"endColumn":30},{"ruleId":"210","severity":1,"message":"227","line":9,"column":9,"nodeType":"212","messageId":"213","endLine":9,"endColumn":16},{"ruleId":"210","severity":1,"message":"228","line":9,"column":18,"nodeType":"212","messageId":"213","endLine":9,"endColumn":28},{"ruleId":"210","severity":1,"message":"229","line":10,"column":10,"nodeType":"212","messageId":"213","endLine":10,"endColumn":21},{"ruleId":"210","severity":1,"message":"230","line":11,"column":10,"nodeType":"212","messageId":"213","endLine":11,"endColumn":18},{"ruleId":"210","severity":1,"message":"231","line":11,"column":20,"nodeType":"212","messageId":"213","endLine":11,"endColumn":23},{"ruleId":"210","severity":1,"message":"232","line":11,"column":25,"nodeType":"212","messageId":"213","endLine":11,"endColumn":32},{"ruleId":"210","severity":1,"message":"233","line":11,"column":34,"nodeType":"212","messageId":"213","endLine":11,"endColumn":42},{"ruleId":"210","severity":1,"message":"234","line":11,"column":44,"nodeType":"212","messageId":"213","endLine":11,"endColumn":47},{"ruleId":"235","severity":1,"message":"236","line":11,"column":7,"nodeType":"237","endLine":11,"endColumn":83},{"ruleId":"235","severity":1,"message":"236","line":20,"column":7,"nodeType":"237","endLine":20,"endColumn":84},{"ruleId":"235","severity":1,"message":"236","line":29,"column":7,"nodeType":"237","endLine":29,"endColumn":84},{"ruleId":"235","severity":1,"message":"236","line":38,"column":7,"nodeType":"237","endLine":38,"endColumn":84},{"ruleId":"235","severity":1,"message":"236","line":47,"column":7,"nodeType":"237","endLine":47,"endColumn":84},{"ruleId":"210","severity":1,"message":"219","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":14},{"ruleId":"210","severity":1,"message":"222","line":4,"column":10,"nodeType":"212","messageId":"213","endLine":4,"endColumn":15},{"ruleId":"210","severity":1,"message":"221","line":4,"column":17,"nodeType":"212","messageId":"213","endLine":4,"endColumn":23},{"ruleId":"210","severity":1,"message":"230","line":9,"column":10,"nodeType":"212","messageId":"213","endLine":9,"endColumn":18},{"ruleId":"210","severity":1,"message":"231","line":9,"column":20,"nodeType":"212","messageId":"213","endLine":9,"endColumn":23},{"ruleId":"210","severity":1,"message":"232","line":9,"column":25,"nodeType":"212","messageId":"213","endLine":9,"endColumn":32},{"ruleId":"210","severity":1,"message":"233","line":9,"column":34,"nodeType":"212","messageId":"213","endLine":9,"endColumn":42},{"ruleId":"210","severity":1,"message":"234","line":9,"column":44,"nodeType":"212","messageId":"213","endLine":9,"endColumn":47},{"ruleId":"210","severity":1,"message":"215","line":5,"column":9,"nodeType":"212","messageId":"213","endLine":5,"endColumn":13},{"ruleId":"210","severity":1,"message":"219","line":3,"column":10,"nodeType":"212","messageId":"213","endLine":3,"endColumn":14},{"ruleId":"210","severity":1,"message":"238","line":6,"column":10,"nodeType":"212","messageId":"213","endLine":6,"endColumn":24},{"ruleId":"210","severity":1,"message":"239","line":10,"column":12,"nodeType":"212","messageId":"213","endLine":10,"endColumn":22},{"ruleId":"235","severity":1,"message":"236","line":70,"column":11,"nodeType":"237","endLine":73,"endColumn":13},{"ruleId":"235","severity":1,"message":"236","line":90,"column":11,"nodeType":"237","endLine":93,"endColumn":13},{"ruleId":"235","severity":1,"message":"236","line":110,"column":11,"nodeType":"237","endLine":113,"endColumn":13},{"ruleId":"235","severity":1,"message":"236","line":130,"column":11,"nodeType":"237","endLine":133,"endColumn":13},{"ruleId":"235","severity":1,"message":"236","line":150,"column":11,"nodeType":"237","endLine":153,"endColumn":13},{"ruleId":"210","severity":1,"message":"221","line":10,"column":10,"nodeType":"212","messageId":"213","endLine":10,"endColumn":16},{"ruleId":"210","severity":1,"message":"222","line":10,"column":18,"nodeType":"212","messageId":"213","endLine":10,"endColumn":23},{"ruleId":"210","severity":1,"message":"219","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":14},{"ruleId":"210","severity":1,"message":"240","line":5,"column":10,"nodeType":"212","messageId":"213","endLine":5,"endColumn":17},{"ruleId":"210","severity":1,"message":"220","line":21,"column":26,"nodeType":"212","messageId":"213","endLine":21,"endColumn":30},{"ruleId":"210","severity":1,"message":"241","line":1,"column":27,"nodeType":"212","messageId":"213","endLine":1,"endColumn":36},"no-native-reassign",["242"],"no-negated-in-lhs",["243"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","'Home' is defined but never used.","'Loginregister' is defined but never used.","'Component' is defined but never used.","'axios' is defined but never used.","'Link' is defined but never used.","'type' is assigned a value but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'AdminDashboard' is defined but never used.","'Regdonors' is defined but never used.","'Addstate' is defined but never used.","'Managestate' is defined but never used.","'Addcity' is defined but never used.","'Managecity' is defined but never used.","'Listedfoods' is defined but never used.","'Requests' is defined but never used.","'New' is defined but never used.","'Pickcom' is defined but never used.","'Rejected' is defined but never used.","'All' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'RiPassportFill' is defined but never used.","'changefood' is defined but never used.","'METHODS' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]